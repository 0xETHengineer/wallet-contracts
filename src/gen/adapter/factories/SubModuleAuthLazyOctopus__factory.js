"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
exports.__esModule = true;
exports.SubModuleAuthLazyOctopus__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [],
        name: "ImageHashIsZero",
        type: "error"
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_hash",
                type: "bytes32"
            },
            {
                internalType: "address",
                name: "_addr",
                type: "address"
            },
            {
                internalType: "bytes",
                name: "_signature",
                type: "bytes"
            },
        ],
        name: "InvalidNestedSignature",
        type: "error"
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "_signature",
                type: "bytes"
            },
            {
                internalType: "bytes32",
                name: "_s",
                type: "bytes32"
            },
        ],
        name: "InvalidSValue",
        type: "error"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_flag",
                type: "uint256"
            },
        ],
        name: "InvalidSignatureFlag",
        type: "error"
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "_signature",
                type: "bytes"
            },
        ],
        name: "InvalidSignatureLength",
        type: "error"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_type",
                type: "uint256"
            },
        ],
        name: "InvalidSignatureType",
        type: "error"
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "_signature",
                type: "bytes"
            },
            {
                internalType: "uint256",
                name: "_v",
                type: "uint256"
            },
        ],
        name: "InvalidVValue",
        type: "error"
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "_signature",
                type: "bytes"
            },
        ],
        name: "SignerIsAddress0",
        type: "error"
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "_signature",
                type: "bytes"
            },
            {
                internalType: "uint256",
                name: "_type",
                type: "uint256"
            },
            {
                internalType: "bool",
                name: "_recoverMode",
                type: "bool"
            },
        ],
        name: "UnsupportedSignatureType",
        type: "error"
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bytes32",
                name: "newImageHash",
                type: "bytes32"
            },
        ],
        name: "ImageHashUpdated",
        type: "event"
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_msgSubDigest",
                type: "bytes32"
            },
            {
                internalType: "bytes",
                name: "_signature",
                type: "bytes"
            },
            {
                internalType: "uint256",
                name: "_rindex",
                type: "uint256"
            },
        ],
        name: "_recoverSignature",
        outputs: [
            {
                internalType: "bytes32",
                name: "_imageHash",
                type: "bytes32"
            },
            {
                internalType: "uint256",
                name: "_weight",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "_thershold",
                type: "uint256"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_imageHash",
                type: "bytes32"
            },
        ],
        name: "updateImageHash",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
];
var SubModuleAuthLazyOctopus__factory = /** @class */ (function () {
    function SubModuleAuthLazyOctopus__factory() {
    }
    SubModuleAuthLazyOctopus__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    SubModuleAuthLazyOctopus__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    SubModuleAuthLazyOctopus__factory.abi = _abi;
    return SubModuleAuthLazyOctopus__factory;
}());
exports.SubModuleAuthLazyOctopus__factory = SubModuleAuthLazyOctopus__factory;
