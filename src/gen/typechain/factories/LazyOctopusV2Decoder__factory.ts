/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LazyOctopusV2Decoder,
  LazyOctopusV2DecoderInterface,
} from "../LazyOctopusV2Decoder";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_space",
        type: "uint256",
      },
    ],
    name: "InvalidNonceSpace",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_type",
        type: "uint256",
      },
    ],
    name: "InvalidNonceType",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "delegateCall",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "revertOnError",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IModuleCalls.Transaction",
        name: "_tx",
        type: "tuple",
      },
    ],
    name: "InvalidTransaction",
    type: "error",
  },
];

const _bytecode =
  "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ac6898fd8d251a0f473bc9c4895b30447be30ce97f43edec9e512964ddbd15da64736f6c634300080e0033";

export class LazyOctopusV2Decoder__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LazyOctopusV2Decoder> {
    return super.deploy(overrides || {}) as Promise<LazyOctopusV2Decoder>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LazyOctopusV2Decoder {
    return super.attach(address) as LazyOctopusV2Decoder;
  }
  connect(signer: Signer): LazyOctopusV2Decoder__factory {
    return super.connect(signer) as LazyOctopusV2Decoder__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LazyOctopusV2DecoderInterface {
    return new utils.Interface(_abi) as LazyOctopusV2DecoderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LazyOctopusV2Decoder {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LazyOctopusV2Decoder;
  }
}
