/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SequenceUtils, SequenceUtilsInterface } from "../SequenceUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_result",
        type: "bytes",
      },
    ],
    name: "CallReverted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "DelegateCallNotAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_available",
        type: "uint256",
      },
    ],
    name: "NotEnoughGas",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "callBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "callBlockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_i",
        type: "uint256",
      },
    ],
    name: "callBlockhash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "callChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "callCode",
    outputs: [
      {
        internalType: "bytes",
        name: "code",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "callCodeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "codeHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "callCodeSize",
    outputs: [
      {
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "callCoinbase",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "callDifficulty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "callGasLeft",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "callGasLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "callGasPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "callOrigin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "callTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "delegateCall",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "revertOnError",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IModuleCalls.Transaction[]",
        name: "_txs",
        type: "tuple[]",
      },
    ],
    name: "multiCall",
    outputs: [
      {
        internalType: "bool[]",
        name: "_successes",
        type: "bool[]",
      },
      {
        internalType: "bytes[]",
        name: "_results",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
    ],
    name: "requireMinNonce",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_expiration",
        type: "uint256",
      },
    ],
    name: "requireNonExpired",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d90806100206000396000f3fe60806040526004361061010e5760003560e01c8063b472f0a2116100a5578063d1db390711610074578063e90f13e711610059578063e90f13e714610299578063f209883a146102cb578063ffd7d741146102de57600080fd5b8063d1db390714610299578063d5b5337f146102ac57600080fd5b8063b472f0a21461021a578063c272d5c31461023a578063c39f2d5c1461024d578063c66764e11461026c57600080fd5b80637f29d538116100e15780637f29d5381461019e578063984395bc146101c057806398f9fbc4146101f4578063aeea5fb51461020757600080fd5b80630fdecfac1461011357806343d9c9351461013557806348acd29f1461014a578063543196eb1461017f575b600080fd5b34801561011f57600080fd5b50465b6040519081526020015b60405180910390f35b34801561014157600080fd5b506101226102ff565b34801561015657600080fd5b5061012261016536600461083c565b73ffffffffffffffffffffffffffffffffffffffff163190565b34801561018b57600080fd5b5061012261019a36600461083c565b3f90565b3480156101aa57600080fd5b506101be6101b936600461085e565b610307565b005b3480156101cc57600080fd5b50325b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161012c565b34801561020057600080fd5b50416101cf565b34801561021357600080fd5b5044610122565b34801561022657600080fd5b506101be610235366004610877565b61039e565b34801561024657600080fd5b503a610122565b34801561025957600080fd5b5061012261026836600461083c565b3b90565b34801561027857600080fd5b5061028c61028736600461083c565b6104da565b60405161012c919061091b565b3480156102a557600080fd5b5045610122565b3480156102b857600080fd5b506101226102c736600461085e565b4090565b3480156102d757600080fd5b5042610122565b6102f16102ec3660046109e5565b61051f565b60405161012c929190610b9f565b60005a905090565b80421061039b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f526571756972655574696c7323726571756972654e6f6e457870697265643a2060448201527f455850495245440000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b50565b6000806103aa836107ea565b6040517f8c3f556300000000000000000000000000000000000000000000000000000000815260048101839052919350915060009073ffffffffffffffffffffffffffffffffffffffff861690638c3f556390602401602060405180830381865afa15801561041d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104419190610c57565b9050818110156104d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f526571756972655574696c7323726571756972654d696e4e6f6e63653a204e4f60448201527f4e43455f42454c4f575f524551554952454400000000000000000000000000006064820152608401610392565b5050505050565b60408051603f833b9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092528181529080600060208401853c50919050565b606080825167ffffffffffffffff81111561053c5761053c61092e565b604051908082528060200260200182016040528015610565578160200160208202803683370190505b509150825167ffffffffffffffff8111156105825761058261092e565b6040519080825280602002602001820160405280156105b557816020015b60608152602001906001900390816105a05790505b50905060005b83518110156107e45760008482815181106105d8576105d8610c70565b60200260200101519050806000015115610621576040517f230d1ccc00000000000000000000000000000000000000000000000000000000815260048101839052602401610392565b80604001515a101561066e5780604001515a6040517f9fa7298200000000000000000000000000000000000000000000000000000000815260048101929092526024820152604401610392565b806060015173ffffffffffffffffffffffffffffffffffffffff16816080015182604001516000146106a45782604001516106a6565b5a5b908360a001516040516106b99190610c9f565b600060405180830381858888f193505050503d80600081146106f7576040519150601f19603f3d011682016040523d82523d6000602084013e6106fc565b606091505b5085848151811061070f5761070f610c70565b6020026020010185858151811061072857610728610c70565b602002602001018290528215151515815250505083828151811061074e5761074e610c70565b602002602001015115801561077d575084828151811061077057610770610c70565b6020026020010151602001515b156107d1578183838151811061079557610795610c70565b60200260200101516040517f3b4c7a5f000000000000000000000000000000000000000000000000000000008152600401610392929190610cbb565b50806107dc81610d0b565b9150506105bb565b50915091565b60008061080560016c01000000000000000000000000610d43565b606084901c94931692915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461083757600080fd5b919050565b60006020828403121561084e57600080fd5b61085782610813565b9392505050565b60006020828403121561087057600080fd5b5035919050565b6000806040838503121561088a57600080fd5b61089383610813565b946020939093013593505050565b60005b838110156108bc5781810151838201526020016108a4565b838111156108cb576000848401525b50505050565b600081518084526108e98160208601602086016108a1565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061085760208301846108d1565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156109805761098061092e565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156109cd576109cd61092e565b604052919050565b8035801515811461083757600080fd5b600060208083850312156109f857600080fd5b823567ffffffffffffffff80821115610a1057600080fd5b818501915085601f830112610a2457600080fd5b813581811115610a3657610a3661092e565b8060051b610a45858201610986565b9182528381018501918581019089841115610a5f57600080fd5b86860192505b83831015610b9257823585811115610a7d5760008081fd5b860160c07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0828d038101821315610ab45760008081fd5b610abc61095d565b610ac78b85016109d5565b81526040610ad68186016109d5565b8c830152606080860135828401526080610af1818801610813565b8285015260a091508187013581850152508486013594508a851115610b165760008081fd5b84860195508f603f870112610b2d57600094508485fd5b8c86013594508a851115610b4357610b4361092e565b610b538d85601f88011601610986565b93508484528f82868801011115610b6a5760008081fd5b848287018e86013760009484018d019490945250918201528352509186019190860190610a65565b9998505050505050505050565b604080825283519082018190526000906020906060840190828701845b82811015610bda578151151584529284019290840190600101610bbc565b50505083810382850152845180825282820190600581901b8301840187850160005b83811015610c48577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868403018552610c368383516108d1565b94870194925090860190600101610bfc565b50909998505050505050505050565b600060208284031215610c6957600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008251610cb18184602087016108a1565b9190910192915050565b828152604060208201526000610cd460408301846108d1565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d3c57610d3c610cdc565b5060010190565b600082821015610d5557610d55610cdc565b50039056fea2646970667358221220a69d3ea9b5e512d0cb34c69f7d869f7d0cf4eaeca91485f13dbf88640d2c0e5e64736f6c634300080e0033";

export class SequenceUtils__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SequenceUtils> {
    return super.deploy(overrides || {}) as Promise<SequenceUtils>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SequenceUtils {
    return super.attach(address) as SequenceUtils;
  }
  connect(signer: Signer): SequenceUtils__factory {
    return super.connect(signer) as SequenceUtils__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SequenceUtilsInterface {
    return new utils.Interface(_abi) as SequenceUtilsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SequenceUtils {
    return new Contract(address, _abi, signerOrProvider) as SequenceUtils;
  }
}
