/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription
} from ".";

interface IERC223ReceiverInterface extends Interface {
  functions: {
    tokenFallback: TypedFunctionDescription<{
      encode([, ,]: [string, BigNumberish, Arrayish]): string;
    }>;
  };

  events: {};
}

export class IERC223Receiver extends Contract {
  connect(signerOrProvider: Signer | Provider | string): IERC223Receiver;
  attach(addressOrName: string): IERC223Receiver;
  deployed(): Promise<IERC223Receiver>;

  on(event: EventFilter | string, listener: Listener): IERC223Receiver;
  once(event: EventFilter | string, listener: Listener): IERC223Receiver;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): IERC223Receiver;
  removeAllListeners(eventName: EventFilter | string): IERC223Receiver;
  removeListener(eventName: any, listener: Listener): IERC223Receiver;

  interface: IERC223ReceiverInterface;

  functions: {
    tokenFallback(
      arg0: string,
      arg1: BigNumberish,
      arg2: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;
  };

  tokenFallback(
    arg0: string,
    arg1: BigNumberish,
    arg2: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  filters: {};

  estimate: {
    tokenFallback(
      arg0: string,
      arg1: BigNumberish,
      arg2: Arrayish
    ): Promise<BigNumber>;
  };
}
