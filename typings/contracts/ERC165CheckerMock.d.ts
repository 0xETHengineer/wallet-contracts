/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription
} from ".";

interface ERC165CheckerMockInterface extends Interface {
  functions: {
    doesContractImplementInterface: TypedFunctionDescription<{
      encode([_contract, _interfaceId]: [string, Arrayish]): string;
    }>;
  };

  events: {};
}

export class ERC165CheckerMock extends Contract {
  connect(signerOrProvider: Signer | Provider | string): ERC165CheckerMock;
  attach(addressOrName: string): ERC165CheckerMock;
  deployed(): Promise<ERC165CheckerMock>;

  on(event: EventFilter | string, listener: Listener): ERC165CheckerMock;
  once(event: EventFilter | string, listener: Listener): ERC165CheckerMock;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): ERC165CheckerMock;
  removeAllListeners(eventName: EventFilter | string): ERC165CheckerMock;
  removeListener(eventName: any, listener: Listener): ERC165CheckerMock;

  interface: ERC165CheckerMockInterface;

  functions: {
    doesContractImplementInterface(
      _contract: string,
      _interfaceId: Arrayish
    ): Promise<boolean>;
  };

  doesContractImplementInterface(
    _contract: string,
    _interfaceId: Arrayish
  ): Promise<boolean>;

  filters: {};

  estimate: {
    doesContractImplementInterface(
      _contract: string,
      _interfaceId: Arrayish
    ): Promise<BigNumber>;
  };
}
